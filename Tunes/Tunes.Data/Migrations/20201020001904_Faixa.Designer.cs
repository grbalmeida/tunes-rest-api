// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tunes.Data.Context;

namespace Tunes.Data.Migrations
{
    [DbContext(typeof(TunesContext))]
    [Migration("20201020001904_Faixa")]
    partial class Faixa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tunes.Business.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("album_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("titulo")
                        .HasColumnType("varchar(160)");

                    b.Property<int>("artista_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("data_cricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("AlbumId");

                    b.HasIndex("artista_id");

                    b.ToTable("album");
                });

            modelBuilder.Entity("Tunes.Business.Models.Artista", b =>
                {
                    b.Property<int>("ArtistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("artista_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("data_criacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ArtistaId");

                    b.ToTable("artista");
                });

            modelBuilder.Entity("Tunes.Business.Models.Faixa", b =>
                {
                    b.Property<int>("FaixaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("faixa_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bytes")
                        .HasColumnName("bytes")
                        .HasColumnType("int");

                    b.Property<string>("Compositor")
                        .HasColumnName("compositor")
                        .HasColumnType("varchar(220)");

                    b.Property<int>("Milissegundos")
                        .HasColumnName("milissegundos")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnName("preco_unitario")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<int?>("album_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("data_criacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("genero_id")
                        .HasColumnType("int");

                    b.Property<int>("tipo_midia_id")
                        .HasColumnType("int");

                    b.HasKey("FaixaId");

                    b.HasIndex("album_id");

                    b.HasIndex("genero_id");

                    b.HasIndex("tipo_midia_id");

                    b.ToTable("faixa");
                });

            modelBuilder.Entity("Tunes.Business.Models.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("genero_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("data_criacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("GeneroId");

                    b.ToTable("genero");
                });

            modelBuilder.Entity("Tunes.Business.Models.TipoMidia", b =>
                {
                    b.Property<int>("TipoMidiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tipo_midia_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("data_criacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("TipoMidiaId");

                    b.ToTable("tipo_midia");
                });

            modelBuilder.Entity("Tunes.Business.Models.Album", b =>
                {
                    b.HasOne("Tunes.Business.Models.Artista", "Artista")
                        .WithMany("Albuns")
                        .HasForeignKey("artista_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tunes.Business.Models.Faixa", b =>
                {
                    b.HasOne("Tunes.Business.Models.Album", "Album")
                        .WithMany("Faixas")
                        .HasForeignKey("album_id");

                    b.HasOne("Tunes.Business.Models.Genero", "Genero")
                        .WithMany("Faixas")
                        .HasForeignKey("genero_id");

                    b.HasOne("Tunes.Business.Models.TipoMidia", "TipoMidia")
                        .WithMany("Faixas")
                        .HasForeignKey("tipo_midia_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
